From 777d251c9e2789665948a1475b1e983e2dcc9c67 Mon Sep 17 00:00:00 2001
From: Alexis Murzeau <amubtdx@gmail.com>
Date: Tue, 20 Sep 2022 23:12:35 +0200
Subject: [PATCH] [SQUASH] spotifywm: Fix detecting new Spotify versions
---
 spotifywm.cpp | 41 +++++++++++++++++++++++++++++++++++++----
 1 file changed, 37 insertions(+), 4 deletions(-)

diff --git a/spotifywm.cpp b/spotifywm.cpp
index c6eed00..3766e59 100644
--- a/spotifywm.cpp
+++ b/spotifywm.cpp
@@ -8,6 +8,10 @@
 #include <dlfcn.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
+#include <X11/Xproto.h>		/* to declare xEvent */
+#include <xcb/xproto.h>
+#include <xcb/xcb.h>
+#include <xcb/xcbext.h>
 
 #define STR_(x) # x
 #define STR(x)  STR_(x)
@@ -41,7 +45,7 @@ void spotifywm_init(void) {
 #define INTERCEPT(ReturnType, SymbolName, ...) \
 		typedef ReturnType (*TYPE_NAME(SymbolName))(__VA_ARGS__); \
 	static void * const BASE_NAME(SymbolName) = dlsym(RTLD_NEXT, STR(SymbolName)); \
-	ReturnType SymbolName(__VA_ARGS__)
+	extern "C" ReturnType SymbolName(__VA_ARGS__)
 #define BASE(SymbolName) ((TYPE_NAME(SymbolName))BASE_NAME(SymbolName))
 
 INTERCEPT(int, XMapWindow,
@@ -50,13 +54,42 @@ INTERCEPT(int, XMapWindow,
 ) {
 	XClassHint* classHint;
 
-	fprintf(stderr, "[spotifywm] spotify window found\n");
+	fprintf(stderr, "[spotifywm] spotify window %lx found\n", w);
 	classHint = XAllocClassHint();
 	if (classHint) {
-		classHint->res_name = "spotify";
-		classHint->res_class = "Spotify";
+		classHint->res_name = (char*)"spotify";
+		classHint->res_class = (char*)"Spotify";
 		XSetClassHint(dpy, w, classHint);
 		XFree(classHint);
 	}
 	return BASE(XMapWindow)(dpy, w);
 }
+
+INTERCEPT(unsigned int, xcb_send_request,
+	xcb_connection_t *c,
+	int flags,
+	struct iovec *vector,
+	const xcb_protocol_request_t *request 
+) {
+	// Check if we are sending a MapWindow request
+	// This code is called from chromium's source code:
+	// ui/gfx/x/generated_protos/xproto.cc in XProto::MapWindow
+	if(request->count >= 1 && vector[0].iov_len >= 8 && ((uint8_t*)vector[0].iov_base)[0] == 8) {
+		uint32_t window_id = ((uint32_t*)vector[0].iov_base)[1];
+
+		fprintf(stderr, "[spotifywm] spotify window %x found\n", window_id);
+		
+		// Don't use the same XCB connection as spotify is checking the returned number
+		Display* dpy = XOpenDisplay(NULL);
+		XClassHint* classHint = XAllocClassHint();
+		if (classHint) {
+			classHint->res_name = (char*)"spotify";
+			classHint->res_class = (char*)"Spotify";
+			XSetClassHint(dpy, window_id, classHint);
+			XFree(classHint);
+		}
+		XCloseDisplay(dpy);
+	}
+	
+	return BASE(xcb_send_request)(c, flags, vector, request);
+}
-- 
2.38.1

